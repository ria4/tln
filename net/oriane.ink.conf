# the upstream component nginx needs to connect to
upstream django {
    server unix:///home/ria/tln/net/tln.sock; # for a file socket
}

# default server for different domain names
server {
    listen 80;
    return 444;
}

map $sent_http_content_type $expires {
    default                 off;
    text/html               epoch;
    text/css                max;
    application/javascript  max;
    ~image/                 max;
}

server {
    # the domain name it will serve for
    server_name oriane.ink; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    location ~ ^/(robots.txt|CV_OrianeTury.pdf) {
        root /home/ria/tln/static;
    }

    location /media {
        alias /home/ria/tln/media;
    }

    location /static {
        alias /home/ria/tln/static;
    }

    location /.well-known {
        alias /home/ria/tln/.well-known;
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  django;
        include     /home/ria/tln/net/uwsgi_params;
    }

    expires $expires;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/oriane.ink/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/oriane.ink/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    if ($host != oriane.ink) {
        return 444;
    }

}

server {
    if ($host = oriane.ink) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen      80;
    server_name oriane.ink;
    return 444;

}
