# the upstream component nginx needs to connect to
upstream django {
    server unix:///home/ria/tln/net/tln.sock; # for a file socket
}

# default for domain names distinct from oriane.ink
# under the current haproxy config, this should never be called
server {
    listen 80;
    return 444;
}

map $sent_http_content_type $expires {
    default                 off;
    text/html               epoch;
    text/css                epoch;
    application/javascript  epoch;
    ~image/                 max;
}

# oriane.ink:443
server {
    server_name oriane.ink;
    charset     utf-8;
    client_max_body_size 100M;

    location ~ ^/(robots.txt|CV_OrianeTury.pdf) {
        root /home/ria/tln/static; }

    location ~ ^/(media|static) {
        root /home/ria/tln; }

    # the ^~ prefix stops location matching before the regex '/static' match above
    location ^~ /static/debian_setup {
        autoindex on;
        autoindex_exact_size off;
        alias /home/ria/tln/static/debian_setup/; }

    location ^~ /media/photologue/photos/cache {
        alias /home/ria/tln/media/photologue/photos/cache/; }

    location ^~ /media/photologue/photos {
        return 403; }

    location ^~ /tmp {
        autoindex on;
        autoindex_exact_size off;
        alias /home/ria/tln/media/tmp/; }

    # finally, send all non-media requests to the django server
    location / {
        uwsgi_pass  django;
        include     /home/ria/tln/net/uwsgi_params; }

    expires $expires;

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/oriane.ink-0001/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/oriane.ink-0001/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    if ($host != oriane.ink) {
        return 444; }

}

# oriane.ink:80, normally redirects to 443
# during acme challenges, certbot appends a location to this block
server {
    server_name oriane.ink;
    listen 80;

    location / {
        return 301 https://$host$request_uri; }
}
