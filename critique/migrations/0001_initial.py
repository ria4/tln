# Generated by Django 3.2.11 on 2022-03-28 21:39

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RightsSupport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('all_rights', 'All rights'),),
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artiste',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cinema',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('comment', models.TextField()),
                ('visited', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Oeuvre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('envie', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Titres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vf', models.CharField(db_index=True, max_length=200)),
                ('vo', models.CharField(blank=True, db_index=True, max_length=200)),
                ('alt', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='TopJeux',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.SmallIntegerField(unique=True)),
                ('jeux', models.ManyToManyField(related_name='top_jeux', related_query_name='top_jeux', to='critique.Oeuvre')),
            ],
        ),
        migrations.CreateModel(
            name='TopFilms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.SmallIntegerField(unique=True)),
                ('films', models.ManyToManyField(related_name='top_films', related_query_name='top_films', to='critique.Oeuvre')),
            ],
        ),
        migrations.CreateModel(
            name='Seance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cinema', models.CharField(max_length=100)),
                ('date', models.DateTimeField(db_index=True)),
                ('date_month_unknown', models.BooleanField(default=False)),
                ('seance_title', models.CharField(blank=True, max_length=200)),
                ('film', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='seances', related_query_name='seance', to='critique.oeuvre')),
            ],
        ),
        migrations.CreateModel(
            name='OeuvreInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mtype', models.CharField(choices=[('film', 'Film'), ('serie', 'SÃ©rie'), ('album', 'Album'), ('jeu', 'Jeu'), ('livre', 'Livre'), ('bd', 'BD')], max_length=5)),
                ('year', models.SmallIntegerField(db_index=True)),
                ('imdb_id', models.CharField(blank=True, max_length=10)),
                ('image_url', models.CharField(blank=True, max_length=45)),
                ('artists', models.ManyToManyField(related_name='oeuvres_info', related_query_name='oeuvre_info', to='critique.Artiste')),
                ('titles', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='oeuvre_info', related_query_name='oeuvre_info', to='critique.titres')),
            ],
        ),
        migrations.AddField(
            model_name='oeuvre',
            name='info',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='oeuvre', related_query_name='oeuvre', to='critique.oeuvreinfo'),
        ),
        migrations.AddField(
            model_name='oeuvre',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='oeuvres', related_query_name='oeuvre', to='critique.Tag'),
        ),
        migrations.CreateModel(
            name='Commentaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_month_unknown', models.BooleanField(default=False)),
                ('date_day_unknown', models.BooleanField(default=False)),
                ('content', models.TextField(blank=True)),
                ('starred', models.BooleanField(default=False)),
                ('oeuvre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', related_query_name='comment', to='critique.oeuvre')),
            ],
        ),
    ]
